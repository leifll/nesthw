apiVersion: apps/v1
kind: Deployment
metadata:
  name: nesthw-deployment
  namespace: apps
  labels:
    app: nesthw-deployment
spec:
  #  replicas: 3 Decided by the HPA
  selector:
    matchLabels:
      app: nesthw-pod
  template:
    metadata:
      labels:
        app: nesthw-pod
    spec:
      containers:
        - name: nesthw-container
          image: ghcr.io/leifll/nesthw:main-d666405-20211130130617642163819 # {"$imagepolicy": "apps:nesthw-imagepolicy"}
          ports:
            - containerPort: 3000
          resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 128Mi
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: nesthw-hpa
  namespace: apps
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: nesthw-deployment
  minReplicas: 2
  maxReplicas: 4
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: AverageValue
        averageValue: 500m
# ---
# Generated by flagger Canary
# kind: Service
# apiVersion: v1
# metadata:
#   name: nesthw-service
#   namespace: apps
# spec:
#   selector:
#     app: nesthw-pod
#   ports:
#     - name: http-nesthw-port
#       port: 80
#       targetPort: 3000
# ---
# Generated by flagger Canary
# apiVersion: networking.istio.io/v1alpha3
# kind: VirtualService
# metadata:
#   name: nesthw-virtualservice
#   namespace: apps
# spec:
#   hosts:
#     - 'nesthw.leiflindback.se'
#   gateways:
#     - istio-system/public-gateway
#   http:
#     - match:
#         - uri:
#             prefix: /nesthw
#       route:
#         - destination:
#             port:
#               number: 80
#             host: nesthw-service.apps.svc.cluster.local
---
apiVersion: flagger.app/v1beta1
kind: Canary
metadata:
  name: nesthw-canary
  namespace: apps
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: nesthw-deployment
  autoscalerRef:
    apiVersion: autoscaling/v2beta2
    kind: HorizontalPodAutoscaler
    name: nesthw-hpa
  service:
    # name, portName, port and targetPort are the corresponding fields from the 
    # k8s service defined above. The values below will make flagger create
    # the same service that would have been created by the commented out service
    # definition above.
    name: nesthw-service
    portName: http-nesthw-port
    port: 80
    targetPort: 3000
    # hosts, gateways and match are the corresponding fields from the 
    # istio virtualservice defined above. The values below will make flagger create
    # the same virtualservice that would have been created by the commented out 
    # virtualservice definition above. In addition, flagger will also create
    # istio destinationrules for the primary and canary services, see
    # https://docs.flagger.app/faq#istio-routing
    hosts:
      - 'nesthw.leiflindback.se'
    gateways:
      - istio-system/public-gateway
    match:
      - uri:
          prefix: /nesthw
  analysis:
    interval: 10s
    threshold: 10
    maxWeight: 50
    stepWeight: 5
    metrics:
      - name: request-success-rate
        thresholdRange:
          min: 99
        interval: 1m
      - name: request-duration
        thresholdRange:
          max: 500
        interval: 1m
    webhooks:
      - name: load-test
        url: http://flagger-loadtester.flagger-test/
        metadata:
          cmd: "hey -z 10s -q 10 -c 2 http://nesthw-service-canary.apps:80/"
